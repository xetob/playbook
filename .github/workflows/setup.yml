name: FoxetGSI-builder

on:
  workflow_dispatch:
    inputs:
      rom_type:
        description: 'Type of ROM (e.g., Pixel, AOSP)'
        required: true
        default: 'Pixel'
      rom_link:
        description: 'Link to the ROM file'
        required: true
        default: 'https://dl.google.com/dl/android/aosp/barbet-sp1a.210812.015-factory-13f4d9f2.zip'
      rom_type_option:
        description: 'Type of GSI (AB or A-only)'
        required: true
        default: 'AB'

jobs:
  Build_GSI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone FoxetGSI-tool
        run: |
          git clone --recurse-submodules https://github.com/FoxetGSI/FoxetGSI-tool.git

      - name: Install dependencies
        run: |
          cd FoxetGSI-tool
          sudo bash setup.sh
          sudo apt-get install -y p7zip-full

      - name: Build GSI
        env:
          ROM_TYPE: ${{ github.event.inputs.rom_type }}
          ROM_LINK: ${{ github.event.inputs.rom_link }}
          ROM_TYPE_OPTION: ${{ github.event.inputs.rom_type_option }}
        run: |
          cd FoxetGSI-tool
          if [ "$ROM_TYPE_OPTION" = "AB" ]; then
            sudo bash url2GSI.sh "$ROM_LINK" "$ROM_TYPE" --ab
          else
            sudo bash url2GSI.sh "$ROM_LINK" "$ROM_TYPE" --aonly
          fi

      - name: Prepare artifacts directory
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          sudo chmod -R 777 $GITHUB_WORKSPACE/artifacts

      - name: Pack IMG to 7z
        id: pack
        run: |
          cd $GITHUB_WORKSPACE/FoxetGSI-tool/output || exit 1
          
          # Проверка наличия файлов
          if [ $(ls -1 *.img 2>/dev/null | wc -l) -eq 0 ]; then
            echo "::error::No .img files found!"
            exit 1
          fi

          timestamp=$(date +'%d.%m.%y_%H.%M')
          for img_file in *.img; do
            base_name="${img_file%.img}"
            
            # Архивирование с абсолютным путем
            7z a -mmt=on "$GITHUB_WORKSPACE/artifacts/${base_name}.7z" "$img_file"
            
            # Экспорт переменных
            echo "release_name=${base_name}_${timestamp}" >> $GITHUB_OUTPUT
            echo "tag_name=${base_name}-${timestamp}" >> $GITHUB_OUTPUT
            echo "file_name=${base_name}.7z" >> $GITHUB_OUTPUT
          done

      - name: Verify artifacts
        run: |
          echo "=== Artifacts list ==="
          ls -lah $GITHUB_WORKSPACE/artifacts
          echo "======================"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.pack.outputs.tag_name }}
          name: ${{ steps.pack.outputs.release_name }}
          body: |
            Automated GSI Build
            - ROM Type: ${{ github.event.inputs.rom_type }}
            - File: ${{ steps.pack.outputs.file_name }}
          files: |
            ${{ github.workspace }}/artifacts/${{ steps.pack.outputs.file_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
