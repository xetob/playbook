name: FoxetGSI-builder

on:
  workflow_dispatch:
    inputs:
      rom_type:
        description: 'Type of ROM (e.g., Pixel, AOSP)'
        required: true
        default: 'Pixel'
      rom_link:
        description: 'Link to the ROM file'
        required: true
        default: 'https://dl.google.com/dl/android/aosp/barbet-sp1a.210812.015-factory-13f4d9f2.zip'
      rom_type_option:
        description: 'Type of GSI (AB or A-only)'
        required: true
        default: 'AB'

jobs:
  Build_GSI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clone FoxetGSI-tool with submodules
        run: |
          git clone --recurse-submodules https://github.com/FoxetGSI/FoxetGSI-tool.git
          cd FoxetGSI-tool

      - name: Install packages
        run: |
          cd FoxetGSI-tool
          sudo bash setup.sh

      - name: Build GSI
        env:
          ROM_TYPE: ${{ github.event.inputs.rom_type }} # Используем входные параметры
          ROM_LINK: ${{ github.event.inputs.rom_link }} # Используем входные параметры
          ROM_TYPE_OPTION: ${{ github.event.inputs.rom_type_option }} # Новое значение
        run: |
          cd FoxetGSI-tool
          if [ "$ROM_TYPE_OPTION" == "AB" ]; then
            sudo bash url2GSI.sh $ROM_LINK $ROM_TYPE --ab
          else
            sudo bash url2GSI.sh $ROM_LINK $ROM_TYPE --aonly
          fi

      - name: Create Release
        id: create_release
        run: |
          RELEASE_NAME="GSI Release - ${{ github.event.inputs.rom_type }} - $(date +'%Y-%m-%d')"
          echo "Creating release: $RELEASE_NAME"
          RESPONSE=$(curl -s -X POST https://api.github.com/repos/${{ github.repository }}/releases 
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" 
            -d "{"tag_name": "$RELEASE_NAME", "name": "$RELEASE_NAME", "body": "Release of GSI built from ${ROM_LINK}."}")
          echo "Release created: $RELEASE_NAME"
          echo "::set-output name=release_id::$(echo $RESPONSE | jq -r .id)"

      - name: Upload GSI to Release
        run: |
          echo "Uploading GSI to release..."
          GSI_FILE_PATH="FoxetGSI-tool/output/*.img"
          RELEASE_ID=${{ steps.create_release.outputs.release_id }}
          curl -s -X POST "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=$(basename $GSI_FILE_PATH)" 
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" 
            -H "Content-Type: application/octet-stream" 
            --data-binary @"$GSI_FILE_PATH"
